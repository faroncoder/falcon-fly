#!/bin/bash
## FILE & FOLDER ROUTINE CHECK
if [[ ! -d "$PWD/completed" ]];
	then
  	mkdir -p "$PWD/completed"
fi
if [[ ! -d "$PWD/thumbs" ]];
  	then
        mkdir -p "$PWD/thumbs"
fi
if [[ ! -d "$PWD/output" ]];
	then
        mkdir -p "$PWD/output"
fi
HEIGHTWT="$1"
if [[ -z "$HEIGHTWT" ]];
	then
	echo -n "which mode ( 360 for 360p; 480 for 480p; etc )?  "
	read HEIGHTWT
fi

	TITLEFILE=""
	YEARFILE=""
	ALBUMFILE=""
	CONTAINTERFILE=""
	ARTISTFILE=""
	MAXRAT="1024k"
	BITRAT="800k"
	BUFFRAT="750k"
	CRF="22.0"
	COMMENTFILE="Encoded by Faron the Falcon $( date )"

function ffmpegstart {
		ffmpeg -ss 00:00:00.00 -i `printf "$LOADER"` \
		-map 0 \
		-coder 1 \
		-reset_timestamps 1 \
		-flags +loop \
		-cmp chroma \
		-partitions +parti4x4+partp8x8+partb8x8 \
		-me_method hex \
		-subq 6 \
		-me_range 16 \
		-keyint_min 25 \
		-sc_threshold 40 \
		-i_qfactor 0.71 \
		-b_strategy 1 \
		-movflags +faststart \
		-g 250 \
		-pix_fmt yuv420p \
		-b:v "$BITRAT" \
		-maxrate "$MAXRAT" \
		-minrate "$BITRAT" \
		-bufsize "$BUFFRAT" \
		-vf "scale=trunc(oh*a/2)*2:$HEIGHTWT" \
		-ar 44100 \
		-ac 2 \
		-ab 128k \
		-pass 1 \
		-f `echo $TYPE` "$PWD/ffmpeg2-$PREFILE-$HEIGHTWT.$TYPE" < /dev/null && \
		ffmpeg -ss 00:00:00.00 -i `printf "$LOADER"` \
		-coder 1 \
		-map 0 \
		-reset_timestamps 1 \
		-flags +loop \
		-cmp chroma \
		-partitions +parti4x4+partp8x8+partb8x8 \
		-me_method hex \
		-subq 6 \
		-me_range 16 \
		-keyint_min 25 \
		-sc_threshold 40 \
		-i_qfactor 0.71 \
		-b_strategy 1 \
		-movflags +faststart \
		-g 250 \
		-pix_fmt yuv420p \
		-b:v "$BITRAT" \
		-maxrate "$MAXRAT" \
		-bufsize "$MAXRAT" \
		-vf "scale=trunc(oh*a/2)*2:$HEIGHTWT" \
		-pass 2 \
		-ar 44100 \
		-ac 2 \
		-ab 128k \
		-metadata title="$TITLEFILE" \
		-metadata album="$ALBUMFILE" \
		-metadata year="$YEARFILE" \
		-metadata container="$CONTAINTERFILE" \
		-metadata artist="$ARTISTFILE" \
		-metadata comment="$COMMENTFILE"  \
		-f "$TYPE" "$PWD/output/$PREFILE-$HEIGHTWT.$TYPE" < /dev/null
	}
function thumbing {
	THUMBLOC="$PWD/output/$PREFILE.mp4"
	HEIGHTPNG="256"
	ffmpeg -ss 00:01:00 -i $THUMBLOC -t 1 -vf -vf scale=-1:$HEIGHTPNG -f image2 -vframes 1 "$PWD/thumbs/$INPUT.png" < /dev/null
	}

function mp4er {
	LIB264="$( echo $INPUT -y -vcodec libx264 -preset ultrafast -qp 0 -tune zerolatency -crf $CRF -acodec libfdk_aac  )"
	LOADER="$( echo $LIB264 )"
	TYPE="mp4"
	ffmpegstart
	thumbing
	}

function webmer {
	INPUT="$PWD/output/$PREFILE-$HEIGHTWT.mp4"
	LIBWEBM="$( echo $INPUT -y -vcodec libvpx -q:v 1 -qmin 10 -qmax 42 -q:a 6 -acodec libvorbis )"
	LOADER="$( echo $LIBWEBM )"
	TYPE="webm"
	thumbing
	ffmpegstart
	}


		# ffmpeg -i "$INPUT" -y \
		# -vcodec libx264 \
		# -preset veryslow \
		# -map 0 \
		# -pix_fmt yuv420p \
		# -b:v "$BITRAT" \
		# -maxrate "$MAXRAT" \
		# -minrate "$BITRAT" \
		# -bufsize "$BUFFRAT" \
		# -vf "scale=trunc(oh*a/2)*2:$HEIGHTWT" \
		# -g 60 \
		# -crf "$CRF" \
		# -coder 1 \
		# -flags +loop \
		# -cmp chroma \
		# -partitions +parti4x4+partp8x8+partb8x8 \
		# -me_method hex \
		# -subq 6 \
		# -me_range 16 \
		# -keyint_min 25 \
		# -sc_threshold 40 \
		# -i_qfactor 0.71 \
		# -b_strategy 1 \
		# -threads 0 \
		# -qp 0 \
		# -movflags +faststart \
		# -acodec libfdk_aac \
		# -ar 44100 \
		# -ac 2 \
		# -ab 128k \
		# -pass 1 \
		# -f mp4 "$PWD/pass1-$PREFILE.mp4" < /dev/null &&
		# ffmpeg -i "$INPUT" -y \
		# -vcodec libx264 \
		# -preset veryslow \
		# -map 0 \
		# -pix_fmt yuv420p \
		# -b:v "$BITRAT" \
		# -maxrate "$MAXRAT" \
		# -minrate "$BITRAT" \
		# -bufsize "$BUFFRAT" \
		# -vf "scale=trunc(oh*a/2)*2:$HEIGHTWT" \
		# -g 60 \
		# -crf "$CRF" \
		# -pass 2 \
	 #    -coder 1 \
		# -flags +loop \
		# -cmp chroma \
		# -partitions +parti4x4+partp8x8+partb8x8 \
		# -me_method hex \
		# -subq 6 \
		# -me_range 16 \
		# -g 60 \
		# -keyint_min 25 \
		# -sc_threshold 40 \
		# -i_qfactor 0.71 \
		# -b_strategy 1 \
		# -threads 0 \
		# -qp 0 \
		# -movflags +faststart \
		# -acodec libfdk_aac \
		# -ar 44100 \
		# -ac 2 \
		# -ab 128k \
		# -metadata title="$TITLEFILE" \
		# -metadata album="$ALBUMFILE" \
		# -metadata year="$YEARFILE" \
		# -metadata container="$CONTAINTERFILE" \
		# -metadata artist="$ARTISTFILE" \
		# -metadata comment="$COMMENTFILE"  \
		# -f mp4 "$PWD/output/$PREFILE.mp4" < /dev/null
		#    GETDATE="$( date )"
		#    echo "$NOW :: $fileonly :: $INPUT  <--- completed" >> $streamlog
	#	mv "$PWD/$INPUT" "$PWD/completed/"
		#    echo "$NOW :: $fileonly :: $INPUT ---> 'finish-mkv' folder" >> $streamlog

		#    echo "$NOW :: $fileonly :: $PREFILE.mp4 ---> 'mp4' folder" >> $streamlog
		#ffmpegthumbnailer -i "output/$PREFILE.mp4" -w -c png -s 0 -o "thumbs/$INPUT.png"

function cleanup {
	mv $INPUT completed/
	rm ffmpeg2*
}

if [ -z "$2" ];
		then
			INPUT="$( find $PWD -maxdepth 1 -type f  -name '*.mkv' -exec basename {} \; | sort | head -n 1 )"
		else
			INPUT="$2"
	fi

if [ -z "$INPUT" ];
		then
			echo "nope there is no file -- ending the encoding engine..."
			exit 0
		else
			PREFILE="$( rev <<< $INPUT | cut -d "." -f2 | rev )"
	fi

	mp4er
	webmer
	cleanup

$0 $HEIGHTWT  ## self-execute the script again for reloop

exit 0

