
loadEnvironment() {

export PATH=$PATH:/home/faron/.bin:/home/local/bin
# set PATH so it includes user's private bin if it exists

#export PATH=$PATH:/home/faron/.bin:/home/local/bin:/home/local/lib/node_modules

qJAVA_HOME="/usr/lib/jvm/java-7-openjdk-amd64"
export PATH=$PATH:$JAVA_HOME/bin

#ANT_HOME="/home/local/share/apache-ant"
#export PATH=$PATH:$ANT_HOME/bin

#	STUDIO_SDK="/home/local/share/android-studio"
#	export PATH=$PATH:$STUDIO_SDK/bin
#	export PATH=$PATH:$STUDIO_SDK/platforms
#	export PATH=$PATH:$STUDIO_SDK/tools
#	export PATH=$PATH:$STUDIO_SDK/platform-tools

#	SDK="/home/local/share/sdk"
#	export PATH=$PATH:$SDK/bin
#
#	NDK="/home/local/share/ndk"
#	export PATH=$PATH:$NDK/bin

#	CATALINA_HOME="/usr/share/tomcat8"
#	export PATH=$PATH:$CATALINA_HOME

#	PHP_HOME="/usr/share/php5"
#	export PATH=$PATH:$PHP_HOME

#NODE_FARON="/home/local/bin"
#export PATH=$PATH:$NODE_FARON

#NPM_FARON="/home/local/bin/npm"
#export PATH=$PATH:$NPM_FARON

#	SUBLIME="/home/local/lib/app/sublime_text"
#	export PATH=$PATH:$SUBLIME

## LOAD RUBY
#source /home/faron/.rvm/scripts/rvm

export PATH="$( echo $PATH | tr ':' '\n' | sort | uniq | sort | tr '\n' ':' | sed 's/::/:/g' )"

export PATH=`echo $PATH | sed 's/::/:/g'`

}



ssh-engine() {

	SSH_ENV=$HOME/.ssh/environment
	# start the ssh-agent
		start_agent() {
			echo "Initializing new SSH agent..."
			# spawn ssh-agent
			/usr/bin/ssh-agent -k | sed 's/^echo/#echo/' > $SSH_ENV
			 chmod -R 0700 $SSH_ENV
			 echo "SSH environment succeeded"
			 source $SSH_ENV > /dev/null
		     /usr/bin/ssh-add /home/faron/.ssh/id_*
		}
			if [ -f $SSH_ENV ]; then
				source $SSH_ENV > /dev/null
				ps -ef | grep $SSH_AGENT_PID | grep ssh-agent$ > /dev/null ||
			        start_agent;
			else
				start_agent;
			fi
}


######### FARONIZED-MENU CD + LS
	function cd {
	builtin cd "$@"
	RET=$?
	ls
	return $RET
	}
#
