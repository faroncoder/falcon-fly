ssh-engine() {
	SSH_ENV="~/.ssh/environment"
	echo "Initializing SSH agent..."
	chmod -R 0700 ~/.ssh

CKRESULT=$( pidof ssh-agent | wc -w )
if [ "$CKRESULT" = 0 ]; then
	ssh-agent -s
	find "$HOME/.ssh" -type f -name "id_*" ! -name "*.pub" -exec /usr/bin/ssh-add {} \;
	echo "SSH environment succeed"
fi

if [ "$CKRESULT" -gt 1 ]; then
	ff.cpu.kill "ssh-agent"
	ssh-agent -s
	find "$HOME/.ssh" -type f -name "id_*" ! -name "*.pub" -exec /usr/bin/ssh-add {} \;
	echo "SSH environment updated"
fi
if [ "$CKRESULT" = 1 ]; then
	find "$HOME/.ssh" -type f -name "id_*" ! -name "*.pub" -exec /usr/bin/ssh-add {} \;
	echo "SSH environment hooked in"
fi


}



loadScripts() {
	if [ ! "$( shopt -oq posix )" ]; then
#		if [ -f /usr/share/bash-completion/bash_completion ]; then
#		. /usr/share/bash-completion/bash_completion
#	fi
#	if [ -f /etc/bash_completion ]; then
##	. /etc/bash_completion
##	fi

	
	##   enable programmable completion features (you don't need to enable
	##   this, if it's already enabled in /etc/bash.bashrc and /etc/profile
	##   sources /etc/bash.bashrc).
	#if ! shopt -oq posix; then
	if [ -f /usr/share/bash-completion/bash_completion ]; then
		. /usr/share/bash-completion/bash_completion
	elif [ -f /etec/bash_completions ]; then
			. /etc/bash_completion
		fi
	
fi
	##  FARON-FILE : BASH_ALIASES
	if [ ! -f ~/.bash_aliases ]; then
		ln -s /home/faron/.falcon/bash/.bash_aliases ~/.bash_aliases
	fi
	. ~/.bash_aliases

	##  FARON-FILE : BASH_COLORS
	if [ ! -f ~/.bash_colors ]; then
		ln -s /home/faron/.falcon/bash/.bash_colors ~/.bash_colors
 	fi
	. ~/.bash_colors

	if [ ! -d ~/.falcon ]; then
		ln -s "/home/faron/.falcon" "~/.falcon"
	fi
	##  FARON-FILE : BASH_TODO
	if [ "$EUID" = 1004 ] || [ "$EUID" == 1000 ]; then
 		if [ ! -f ~/.bash_todo ]; then
			ln -s "/home/faron/.falcon/bash/.bash_todo" "~/.bash_todo"
		fi
		. ~/.bash_todo
	fi
	alias rm="trash-put"
	
}

loadEnvironment() {

# set PATH so it includes user's private bin if it exists
export PATH="$PATH:/home/faron/.bin:/home/local/bin"

# including node, npm, and node_modules
export PATH="$PATH:/home/local/lib/node_modules"

JAVA_HOME="/usr/local/jvm/jdk1.8.0_60"
JRE_HOME="/usr/local/jvm/jre1.8.0_60"
export PATH="$PATH:$JAVA_HOME/bin:$JRE_HOME/bin"


ANT_HOME="/home/local/share/apache-ant"
export PATH="$PATH:$ANT_HOME/bin"

#	STUDIO_SDK="/home/local/share/android-studio"
#	export PATH=$PATH:$STUDIO_SDK/bin
#	export PATH=$PATH:$STUDIO_SDK/platforms
#	export PATH=$PATH:$STUDIO_SDK/tools
#	export PATH=$PATH:$STUDIO_SDK/platform-tools

#	SDK="/home/local/share/sdk"
#	export PATH=$PATH:$SDK/bin
#
#	NDK="/home/local/share/ndk"
#	export PATH=$PATH:$NDK/bin

#	CATALINA_HOME="/usr/share/tomcat8"
#	export PATH=$PATH:$CATALINA_HOME

#	PHP_HOME="/usr/share/php5"
#	export PATH=$PATH:$PHP_HOME

#	SUBLIME="/home/local/lib/app/sublime_text"
#	export PATH=$PATH:$SUBLIME

CLEANUP=`echo $PATH | tr ':' '\n' | sort | uniq | sort | tr '\n' ':' | sed 's/::/:/g'`

export PATH="`echo $CLEANUP`"

loadScripts
ssh-engine

}


if [ "$EUID" = 0 ]; then
	if [ ! "$( kill $( pidof ssh-agent ) )" ]; then
		SSH_AGENT_PID=""
	fi
	if [ -f "$SSH_ENV" ]; then
		rm $SSH_ENV
	fi
	loadEnvironment
fi

if [ "$EUID" = 1000 ] || [ "$EUID" = 1004 ]; then
	loadEnvironment	
fi

######### FARONIZED-MENU FUNCTION 
    function cd  {
    builtin cd "$@"
    RET=$?
    ls
    return $RET
}

