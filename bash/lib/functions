 function startTime() {
        TIMERAW=""
        export TIMESTART=`date +%s`
        doFlush
}

function stopTime() {
        TIMEEND=`date +%s`
	num=`echo $TIMEEND - $TIMESTART | bc `
	export num=$num
        }


function startTimeScript() {
        export STIMESTART=`date +%s`
}

function stopTimeScript() {
        STIMEEND=`date +%s`
	num=`echo $STIMEEND - $STIMESTART | bc`
	export num=$num

        }

function populate() {
	MMS=`seq -w 000 $mms | tail -n 1 2> /dev/null `
	DAY=`seq -w 00 $day | tail -n 1 2> /dev/null `
	HOUR=`seq -w 00 $hour | tail -n 1 2> /dev/null `
	MIN=`seq -w 00 $min | tail -n 1 2> /dev/null `
	SEC=`seq -w 00 $sec | tail -n 1 2> /dev/null `
}


function processArray() {
		num=$num
		if((num>59));then
			((sec=$num%60))
			((num=$num/60))
			if((num>59));then
				((min=$num%60))
				((num=$num/60))
				if((num>23));then
					((hour=$num%24))
					((day=$num/24))
				else
					((hour=$num))
				fi
			else
				((min=$num))
			fi
		else
			((sec=num))
		fi
}

function decodeVarsClear() {
		num=";  sec="; hour="; min="; day="; mms=";
}


function decodeMsec() {
	mms=0
	sec=0
	min=0
	hour=0
	day=0
	if((num>1000)); then
		((mms=$num%1000))
		((num=$num/1000))
			processArray
	else
		((mms=num))
	fi
	populate
	export PASS="$DAY:$HOUR:$MIN:$SEC:$MMS"

}


function decodeSec() {
		sec=0
		min=0
		hour=0
		day=0
		num=$num
		processArray
		populate
		export PASS="$DAY:$HOUR:$MIN:$SEC"
}

function _checkTime() {
	decodeVarsClear
	stopTime
	decodeSec
	TIMED=$PASS
	_send=$CHR
	_comment="$b_purple$TIMED $reset"
	_send=""
	_FY
}

function doneTime() {
	decodeVarsClear
	stopTime
	decodeSec
	TIMED=$PASS
	logger "`basename $0` | $TIMED"
	exit 0
}

function tellTimeM() {
	decodeVarsClear
	decodeMsec
	export	TIMED=$PASS
	echo $TIMED

}

function tellTime() {
	decodeVarsClear
	decodeSec
	export	TIMED=$PASS
	echo $TIMED

}

function tellTimeScript() {
	decodeVarsClear
	stopTimeScript
	decodeSec
	export STIMED=$PASS
}

function openshengine() {
        echo "Initializing SSH agent..."
        chmod 700 -R ~/.ssh;
        echo "privizating ~/.ssh : done";
        if [[ -f "/home/users/$USER/.ssh/authorized_keys" ]]; then
                chmod 640 /home/users/$USER/.ssh/authorized_keys
        fi
        ssh-agent; 2> /dev/null < /dev/null
        eval $( ssh-agent -s ) > ~/.ssh/environment;
        find -L "/home/users/$USER/.ssh" -type f -name 'id_*' ! -name '*.pub' -exec ssh-add {} \;
}

function cd() {
builtin cd "$@";
	RET="$?";
	ls --color=always
	return "$RET";
}





function loadSudo() {
        if [[ "$EUID" != 0 ]]; then export SUDO="sudo"; fi
}

function doFlush() {		
export _send=""
export _comment=""
export _CMD=""
export _complyAskQ=""
export _complyVar0=""
export _complyVar1=""
export _complyAskCMD=""
export _complyCloseCMD=""
export _complyCloseComment=""
export _CMDA0=""
export _CMDA1=""
export _commentA1=""
export _commentA0=""
export _send0=""
export _send1=""
export _sendAsk=""
export _sendClose=""
doVarLoad
}

function doVarLoad() {
export _send=$_send
export _comment=$_comment
export _CMD=$_CMD
export _complyAskQ=$_complyAskQ
export _complyVar0=$_complyVar0
export _complyVar1=$_complyVar1
export _complyAskCMD=$_complyAskCMD
export _complyCloseCMD=$_complyCloseCMD
export _complyCloseComment=$_complyCloseComment
export _CMDA0=$_CMDA0
export _CMDA1=$_CMDA1
export _commentA1=$_commentA1
export _commentA0=$_commentA0
export _send0=$_send0
export _send1=$_send1
export _sendAsk=$_sendAsk
export _sendClose=$_sendClose
}



# function Go_ok() {
# 	echo -e "$clear$b_green$CHR346$clear"
# }
# function Go_no() {
# 	echo -e "$clear$b_red$CHR146$clear"
# }


# function Go_warn() {
# 	echo -e "$clear$b_yellow$CHR182$clear"
# }


# function Go_info() {
# 	echo -e "$clear$b_blue$CHR152$clear"
# }


# function Go_stat() {
# 	echo -e "$clear[$b_teal$CHR47$clear"
# }

function _ok() {
	# echo -e -n "$clear$b_green$CHR346$clear"
    
	
	
	echo -e -n "$clear$b_green$_send$clear $_comment"
	read ACTION
}

function _no() {
	# if [[ $_send ==  ]]; then
	# echo -e -n "$clear$b_red$CHR146$clear"
	# else
	# echo -e $clear$b_red$CHR146$clear
	# fi
	

	echo -e -n "$clear$b_red$_send$clear $_comment"
	read ACTION
}

function _warn() {
	# if [[ "$_send" == " ]]; then
	# echo -e -n "$clear$b_yellow$CHR182$clear"
	

	echo -e -n "$clear$b_yellow$_send$clear $_comment"
	read ACTION
	# else
	# echo -e "$clear$b_yellow$CHR182$clear"
	# fi
}


function _info() {

	# if [[ "$_send" = " ]]; then

	echo -e -n "$clear$b_blue$_send$clear $_comment"
	# else
	# echo -e "$clear$b_blue$CHR152$clear
	# fi
	read ACTION
}


function _stat() {
	

	echo -e -n "$clear$b_teal$_send$clear $_comment"
	read ACTION

	# echo -e -n "$clear$b_teal$CHR47$clear]"
	# echo -e $clear$b_teal$CHR47$clear
}

function _FY() {

	echo -e "[$b_yellow$_send$clear] $_comment "

}
function _FG() {

	echo -e "[$b_green$_send$clear] $_comment "

}

function _FR() {

	echo -e "[$b_red$_send$clear] $_comment "

}

function _FP() {

	echo -e "[$b_purple$_send$clear] $_comment "

}

function _FB() {

	echo -e "[$b_blue$_send$clear] $_comment "

}

function _FT() {

	echo -e "[$b_teal$_send$clear] $_comment "

}

function _FD() {

	echo -e "[$b_gray$_send$clear] $_comment "

}

function _CMD(){
	echo -e	$_CMD
}

function _checkPath() {
	echo $PATH | tr ':' '\n'
}




function _complyClose(){
	
	echo -e $_complyCloseCMD
	_comment=$_complyCloseComment
	_sendAsk=
	_FT

	}
	
function _complyAsk() {
		_comment=$_complyAskQ
		if [[ "$_complyASKCMD" != "" ]]; then
		echo -e $_complyASKCMD
		fi
		_ok
}


function _comply0() {		
		_comment=$_commentA1
		if [[ "$_CMDA0" != "" ]]; then
		echo -e $_CMDA0
		fi
		_FG
}
function _comply1() {
		_comment=$_commentA1
		if [[ "$_CMDA1" != "" ]]; then
		echo -e $_CMDA1
		fi
		_FB
}


function _complyConfirm() {
doVarLoad
	_complyAsk

if [[ "$_complyVar1" == "" ]]; then 

		if [[ "$ACTION" == "$_complyVar0" ]]; then
				_comply0
		fi

else
		if [[ "$ACTION" == "$_complyVar0" ]]; then
				_comply1
		else 
				_comply0
		fi
fi

_complyClose

}