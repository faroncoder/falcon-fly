function startTime() {
        export TIMESTART=`date +%s`
}

function stopTime() {
       	TIMEEND=`date +%s`
	export TIMEEND=$TIMEEND
        TIMERAW=`echo "$TIMEEND - $TIMESTART" | bc`
        }


function humanTime() {
 num=$TIMERAW
    min=0
    hour=0
    day=0
    if((num>59));then
        ((sec=$num%60))
        ((num=$num/60))
        if((num>59));then
            ((min=$num%60))
            ((num=$num/60))
            if((num>23));then
                ((hour=$num%24))
                ((day=$num/24))
            else
                ((hour=$num))
            fi
        else
            ((min=$num))
        fi
    else
        ((sec=num))
    fi
     DAY=`seq -w 00 $day | tail -n 1 2> /dev/null `
      HOUR=`seq -w 00 $hour | tail -n 1 2> /dev/null `
      MIN=`seq -w 00 $min | tail -n 1 2> /dev/null `
      SEC=`seq -w 00 $sec | tail -n 1 2> /dev/null `
    TIMED="$DAY:$HOUR:$MIN:$SEC"
	export TIMED=$TIMED
    sec=""; hour=""; min=""; sec="";

}

function checkTime() {
        stopTime
        humanTime
        _comment="$FBpurple$TIMED$Foff"
	_send="$b_yellow warn$reset"
	_FY
}







function doneTime() {
        stopTime
        humanTime
        logger "`basename $0` | $TIMED"
        exit 0
}



function openshengine(){
        echo "Initializing SSH agent..."
        chmod 700 -R ~/.ssh;
        echo "privizating ~/.ssh : done";
        if [[ -f "/home/users/$USER/.ssh/authorized_keys" ]]; then
                chmod 640 /home/users/$USER/.ssh/authorized_keys
        fi
        ssh-agent; 2> /dev/null < /dev/null
        eval $( ssh-agent -s ) > ~/.ssh/environment;
        find -L "/home/users/$USER/.ssh" -type f -name 'id_*' ! -name '*.pub' -exec ssh-add {} \;
}


function cd(){
builtin cd "$@";
	RET="$?";
	ls 2> /dev/null
	return "$RET";
}


function editrecent(){

builtin "$@";
	RET="$?";
	subl `which $( tail -n 1 ~/.bash_history | awk '{print $1}' )`
	return "$RET";
}

function loadSudo(){
        if [[ "$EUID" != 0 ]]; then export SUDO="sudo"; fi
}

function doFlush() {
	export  _send=""
	export  _comment=""
}

function doVarLoad() {
	 export _send=${_send}
	 export _comment=${_comment}
}



function _ok() {
	# if [[ "$_send" = "" ]]; then
	echo -e ${reset}[${b_green}${CHR346}${b_closer}${reset}]
	# else
	# echo -e ${reset}${b_green}${CHR346}${b_closer}${reset}
	# fi
}
function _no() {
	# if [[ "$_send" == "" ]]; then
	echo -e ${reset}[${b_red}${CHR146}${b_closer}${reset}]
	# else
	# echo -e ${reset}${b_red}${CHR146}${b_closer}${reset}
	# fi
}


function _warn() {
	# if [[ "$_send" == "" ]]; then
	echo -e ${reset}[${b_yellow}${CHR182}${b_closer}${reset}]
	# else
	# echo -e ${reset}${b_yellow}${CHR182}${b_closer}${reset}
	# fi
}


function _info() {
	# if [[ "$_send" = "" ]]; then
	echo -e ${reset}[${b_blue}${CHR152}${b_closer}${reset}]
	# else
	# echo -e ${reset}${b_blue}${CHR152}${b_closer}${reset}
	# fi
}


function _stat() {
	echo -e ${reset}[${b_teal}${CHR47}${b_closer}${reset}]
	# echo -e ${reset}${b_teal}${CHR47}${b_closer}${reset}
}

function _FY() {
	doVarLoad
	echo -e [${b_yellow}${_send}${b_closer}${reset}] ${_comment}
	doFlush
}
function _FG() {
	doVarLoad
	echo -e [${b_green}${_send}${b_closer}${reset}] ${_comment}
	doFlush
}

function _FR() {
	doVarLoad
	echo -e [${b_red}${_send}${b_closer}${reset}] ${_comment}
	doFlush
}

function _FP() {
	doVarLoad
	echo -e [${b_purple}${_send}${b_closer}${reset}] ${_comment}
	doFlush
}

function _FB() {
	doVarLoad
	echo -e [${b_blue}${_send}${b_closer}${reset}] ${_comment}
	doFlush
}

function _FT() {
	doVarLoad
	echo -e [${b_teal}${_send}${b_closer}${reset}] ${_comment}
	doFlush
}

function _FD() {
	doVarLoad
	echo -e [${b_gray}${_send}${b_closer}${reset}] ${_comment}
	doFlush
}


function _checkPath(){
	echo $PATH | tr ':' '\n'
}

