 function startTime() {
        TIMERAW=""
        export TIMESTART=`date +%s`
}

function stopTime() {
        TIMEEND=`date +%s`
	num=`echo $TIMEEND - $TIMESTART | bc `
	export num=$num
        }


function startTimeScript() {
        export STIMESTART=`date +%s`
}

function stopTimeScript() {
        STIMEEND=`date +%s`
	num=`echo $STIMEEND - $STIMESTART | bc`
	export num=$num

        }

function populate() {
	MMS=`seq -w 000 $mms | tail -n 1 2> /dev/null `
	DAY=`seq -w 00 $day | tail -n 1 2> /dev/null `
	HOUR=`seq -w 00 $hour | tail -n 1 2> /dev/null `
	MIN=`seq -w 00 $min | tail -n 1 2> /dev/null `
	SEC=`seq -w 00 $sec | tail -n 1 2> /dev/null `
}


function processArray() {
		num=$num
		if((num>59));then
			((sec=$num%60))
			((num=$num/60))
			if((num>59));then
				((min=$num%60))
				((num=$num/60))
				if((num>23));then
					((hour=$num%24))
					((day=$num/24))
				else
					((hour=$num))
				fi
			else
				((min=$num))
			fi
		else
			((sec=num))
		fi
}

function decodeVarsClear() {
		num="";  sec=""; hour=""; min=""; day=""; mms="";
}


function decodeMsec() {
	mms=0
	sec=0
	min=0
	hour=0
	day=0
	if((num>1000)); then
		((mms=$num%1000))
		((num=$num/1000))
			processArray
	else
		((mms=num))
	fi
	populate
	export PASS="$DAY:$HOUR:$MIN:$SEC:$MMS"

}

function findCharId() {
	echo -n "$CHR568 keyword to find the char?  "
	read WHICHONE
	grep "$WHICHONE" /usr/local/lib/faron_falcon/special/export-characters.list
}

function decodeSec() {
		sec=0 
		min=0
		hour=0
		day=0
		num=$num
		processArray
		populate
		export PASS="$DAY:$HOUR:$MIN:$SEC"
}

function _checkTime() {
	decodeVarsClear
	stopTime
	decodeSec
	TIMED=$PASS
	_comment="$_yellow$TIMED $clear"
	_send="$b_teal$CHR154$clear"
	_FY
}


function doVarLoad() {		
export _send=""
export _comment=""
export _CMD=""
 export _complyAskQCmd=""
 export _complyAskQSend=""
 export _complyAskQComment=""
 export _complyAskQResponseA=""
 export _complyAskQResponseB=""
 export _complyAskCloseCmd=""
 export _complyAskCloseSend=""
 export _complyAskCloseComment=""
 export _complyAskCondACmd=""
 export _complyAskCondASend=""
 export _complyAskCondAComment=""
 export _complyAskCondBCmd=""
 export _complyAskCondBSend=""
 export _complyAskCondBComment=""
 export _complyAskElseIfCmd=""
 export _complyAskElseIfSend=""
 export _complyAskElseIfComment=""
 export _complyAskElseElseCmd=""
 export _complyAskElseElseSend=""
 export _complyAskElseElseComment=""
 export _complyARespond=$_complyARespond
 export _complyACmd=$_complyACmd
 export _complyASend=$_complyASend
 export _complyAComment=$_complyAComment
 export _complyAskCmd=$_complyAskCmd
 export _complyAskQ=$_complyAskQ
 export _complyAskRespond=$_complyAskRespond
 export _complyAskQCmd=$_complyAskQCmd
 export _complyAskQSend=$_complyAskQSend
 export _complyAskQComment=$_complyAskQComment
 export _complyAskQResponseA=$_complyAskQResponseA
 export _complyAskQResponseB=$_complyAskQResponseB
 export _complyAskCloseCmd=$_complyAskCloseCmd
 export _complyAskCloseSend=$_complyAskCloseSend
 export _complyAskCloseComment=$_complyAskCloseComment
 export _complyAskCondACmd=$_complyAskCondACmd
 export _complyAskCondASend=$_complyAskCondASend
 export _complyAskCondAComment=$_complyAskCondAComment
 export _complyAskCondBCmd=$_complyAskCondBCmd
 export _complyAskCondBSend=$_complyAskCondBSend
 export _complyAskCondBComment=$_complyAskCondBComment
 export _complyAskElseIfCmd=$_complyAskElseIfCmd
 export _complyAskElseIfSend=$_complyAskElseIfSend
 export _complyAskElseIfComment=$_complyAskElseIfComment
 export _complyAskElseElseCmd=$_complyAskElseElseCmd
 export _complyAskElseElseSend=$_complyAskElseElseSend
 export _complyAskElseElseComment=$_complyAskElseElseComment
export _send=$_send
export _comment=$_comment
export _CMD=$_CMD
}

function doneTime() {
	decodeVarsClear
	stopTime
	decodeSec
	TIMED=$PASS
	logger "`basename $0` | $TIMED"
	doVarLoad
	exit 0
}

function tellTimeM() {
	decodeVarsClear
	decodeMsec
	export	TIMED=$PASS
	echo $TIMED

}

function tellTime() {
	decodeVarsClear
	decodeSec
	export	TIMED=$PASS
	echo $TIMED

}

function tellTimeScript() {
	decodeVarsClear
	stopTimeScript
	decodeSec
	export STIMED=$PASS
	echo $STIMED
}

function openshengine() {
        echo "Initializing SSH agent..."
        chmod 700 -R ~/.ssh;
        echo "privizating ~/.ssh : done";
        if [[ -f "/home/users/$USER/.ssh/authorized_keys" ]]; then
                chmod 640 /home/users/$USER/.ssh/authorized_keys
        fi
        ssh-agent; 2> /dev/null < /dev/null
        eval $( ssh-agent -s ) > ~/.ssh/environment;
        find -L "/home/users/$USER/.ssh" -type f -name 'id_*' ! -name '*.pub' -exec ssh-add {} \;
}

function cd() {
builtin cd "$@";
	RET="$?";
	ls --color=always
	return "$RET";
}





function loadSudo() {
        if [[ "$EUID" != 0 ]]; then export SUDO="sudo"; fi
}






# function Go_ok() {
# 	echo -e "$clear$b_green$CHR346$clear"
# }
# function Go_no() {
# 	echo -e "$clear$b_red$CHR146$clear"
# }


# function Go_warn() {
# 	echo -e "$clear$b_yellow$CHR182$clear"
# }


# function Go_info() {
# 	echo -e "$clear$b_blue$CHR152$clear"
# }


# function Go_stat() {
# 	echo -e "$clear[$b_teal$CHR47$clear"
# }

function _ok() {
	# echo -e -n "$clear$b_green$CHR346$clear"
    
	
	echo -e -n "$clear$b_green$_send$clear $_comment"
	read ACTION
}

function _no() {
	# if [[ $_send ==  ]]; then
	# echo -e -n "$clear$b_red$CHR146$clear"
	# else
	# echo -e $clear$b_red$CHR146$clear
	# fi
	

	echo -e -n "$clear$b_red$_send$clear $_comment"
	read ACTION
}

function _warn() {
	# if [[ "$_send" == " ]]; then
	# echo -e -n "$clear$b_yellow$CHR182$clear"
	_send=$CHR714
	echo -e -n " $clear$b_yellow$_send $clear $_comment$clear"
	read ACTION
	# else
	# echo -e "$clear$b_yellow$CHR182$clear"
	# fi
}


function _info() {

	# if [[ "$_send" = " ]]; then

	echo -e -n "$clear$b_blue$_send$clear $_comment"
	# else
	# echo -e "$clear$b_blue$CHR152$clear
	# fi
	read ACTION
}


function _stat() {
	

	echo -e -n "$clear$b_teal$_send$clear $_comment"
	read ACTION

	# echo -e -n "$clear$b_teal$CHR47$clear]]"
	# echo -e $clear$b_teal$CHR47$clear
}

function _FY() {

	echo -e "$b_yellow$_send$clear $_comment "

}
function _FG() {

	echo -e "$b_green$_send$clear $_comment "

}

function _FR() {

	echo -e "$b_red$_send$clear $_comment "

}

function _FP() {

	echo -e "$b_purple$_send$clear $_comment "

}

function _FB() {

	echo -e "$b_blue$_send$clear $_comment "

}

function _FT() {

	echo -e "$b_teal$_send$clear $_comment "

}

function _FD() {

	echo -e "$b_gray$_send$clear $_comment "

}

function _CMD(){
	$_CMD
}

function _checkPath() {
	export PATH=`echo $PATH | tr ':' '\n' | sort | uniq | tr '\n' ':' | sed 's/:\/bin/\/bin/g' | sed 's/\/usr\/sbin:/\/usr\/sbin/g'`
}



function _complyAsk() {
	
# complyAskQPackage="$( $_complyAskCmd ) | $( $_complyAskQ ) | $( $_complyAskRespond )"
		_comment=$_complyAskQComment 
		_send=$_complyAskQSend
		if [[ "$_complyAskQCmd" != "" ]]; then
			$_complyAskQCmd
		fi
		echo -e -n "$_yellow$_send$clear$_comment  "
		
}

function _comply0() {		

# complyAPack="$(  $_complyARespond ) | $( $_complyACmd) | $( $_complyASend ) | $( $_complyAComment )"
		_comment=$_complyAskCondAComment
		_send=$_complyAskCondASend

		if [[ "$_complyAskCondACmd" != "" ]]; then
			$_complyAskCondACmd
		fi
		echo -e -n 

		_FY
}
function _comply1() {		

# complyBPack="$(  $_complyBRespond ) | $( $_complyBCmd) | $( $_complyBSend ) | $( $_complyBComment ) | $( $_complyElseElseCmd )"

		_comment=$_complyAskCondBComment
		_send=$_complyAskCondBSend
		if [[ "$_complyAskCondBCmd" != "" ]]; then
			$_complyAskCondBCmd
		fi
		_FY
}

function _complyClose(){
	
#complyAskClose="$( $_complyAskCloseCmd ) | $( $_complyAskCloseSend ) | $( $_complyAskCloseComment )"		
		_comment=$_complyAskCloseComment
		_send=$_complyAskCloseSend
		if [[ "$_complyAskCloseCmd" != "" ]]; then
			$_complyAskCloseCmd
		fi
		_FG

}	
	

function _complyElseIf() {	
	
# complyElseIfPack="$(  $_complyElseIfRespond ) | $( $_complyElseIfCmd ) | $( $_complyAskElseIfSend ) | $( $_complyAskElseIfComment ) "
		_comment=$_complyAskElseIfComment
		_send=$_complyAskElseIfSend
		if [[ "$_complyAskElseIfCmd" != "" ]]; then
			$_complyAskElseIfCmd
		fi
		_FY
}

function _complyElseElse() {		

# complyElseElsePack="$( $_complyElseElseCmd ) | $( $_complyAskElseElseSend ) | $( $_complyAskElseElseComment ) "
		_comment=$_complyAskElseElseComment
		_send=$_complyAskElseElseSend
		if [[ "$_complyAskElseElseCmd" != "" ]]; then
			$_complyAskElseElseCmd
		fi
		_FY
}



function _complyConfirm() {

_complyAsk

		if [[ "$_complyAskQResponseA" != "" ]] && [[ "$_complyAskQResponseB" == "" ]] &&  [[ "$_complyElseElseCmd" == "" ]] ||  [[ "$_complyElseElseComment" == "" ]]
			then
				if [[ "$ACTION" == "$_complyAskQResponseA" ]]; then
					_comply0	
				fi
		elif  [[ "$_complyAskQResponseA" != "" ]] && [[ "$_complyAskQResponseB" != "" ]] &&  [[ "$_complyAskElseElseCmd" != "" ]] ||  [[ "$_complyAskElseElseComment" != "" ]] 
			then
				if [[ "$ACTION" == "$_complyAskQResponseA" ]]
					then
						_comply0
				elif  [[ "$ACTION" == "$_complyAskQResponseB" ]]
					then
						_comply1
				else
						_complyElseElse
				fi

		elif [[ "$_complyAskQResponseA" != "" ]]  && [[  "$_complyAskQResponseB" == "" ]]  &&  [[ "$_complyAskElseElseCmd" != "" ]] ||  [[ "$_complyAskElseElseComment" != "" ]] 
				then
					if [[ "$ACTION" == "$_complyAskQResponseA" ]]
						then
							_comply0
					else
							_complyElseElse
					fi		
		elif [[ "$_complyAskQResponseA" != "" ]] && [[ "$_complyAskQResponseB" != "" ]] && [[ "$_complyAskElseElseCmd" != "" ]] ||  [[ "$_complyAskElseElseComment" != "" ]] 
				then
					if [[ "$ACTION" == "$_complyAskQResponseA" ]]
						then
							_comply0
					fi
					if [[ "$ACTION" == "$_complyAskQResponseB" ]]
						then
							_comply1
					fi

		else

			_no
		fi
		

_complyClose

}

